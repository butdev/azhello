trigger:
    - master

resources :
    repositories:
    - repository: pipelines
      type: git
      name: pipelines-template
    - repository: manifests
      type: git
      name: kustomize-template

name: v$(Date:yyyyMMdd)$(Rev:.r)

variables:
    REGISTRY_CONNECTION_NAME: myacr
    IMAGE_NAME: apps/hello
    REGISTRY_URL: jbtestacr.azurecr.io
    APPLICATION_NAME: hello
    ENVIRONMENT_NAME: Dev
    VMIMAGE_NAME: ubuntu-latest
    

stages:
    - stage: Java_App_Build
      displayName: Java application Build
      jobs:
        - job: build
          displayName: Maven build, docker build and tagging on git
          pool:
            vmImage: ubuntu-latest
          variables:
            MAVEN_CACHE_FOLDER: $(System.DefaultWorkingDirectory)/.m2/repository
            MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
            JDK_VERSION: '11'
          steps:
            - template: build.yaml@pipelines

    - stage: AKS_Deploy_Dev
      displayName: AKS Deploy on Development
      dependsOn: Java_App_Build
      jobs:
        - job: 
          steps:
          - task: KubernetesManifest@0
            displayName: Create secret
            inputs:
              action: createSecret
              secretType: dockerregistry #dockerRegistry or generic
              secretName: myacrsecret
              dockerRegistryEndpoint: myacr #Service connection name?
              kubernetesServiceConnection: Dev-jbtest-aks-hello-1619683637064 #kubernetes Service connection Name
              namespace: hello
#          - task: KubernetesManifest@0
#            inputs:
#             action: 'deploy'
#             kubernetesServiceConnection: 'Dev-jbtest-aks-hello-1619683637064'
#             manifests: 'manifests/**'
#             imagePullSecrets: 'myacrsecret'
##
        - deployment: Deploy_Dev
          displayName: Deploy on Development
          pool:
            vmImage: $(VMIMAGE_NAME)
          variables:
            KUSTOMIZATION_PATH: './$(APPLICATION_NAME)/dev'
          envronment: $(ENVIRONMENT_NAME).$(APPLICATION_NAME)
          strategy:
            runOnce:
              deploy:
                steps:
                  - template: deploy.yaml@pipelines
            
        